openapi: 3.0.0
info:
  title: Task API
  description: My Homework.
  version: 1.0.0

components:
  schemas:
    Task:
      type: object
      properties:
        dueDate:
          type: string
          format: date
        priority:
          type: string
          enum:
            - LOW
            - MEDIUM
            - HIGH
        lable:
          type: string
          enum: 
            - WORK
            - PERSONAL
        task:
          type: string
          example: Groceries
        done:
          type: boolean
    TaskWithID:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 123 
        - $ref: "#/components/schemas/Task"

paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: Returns a list of users.
      responses:
        "200":
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items: 
                      $ref: "#/components/schemas/TaskWithID"
    post:
      tags:
        - Tasks
      summary: Create new task.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/Task"             
      responses:
        "200":
          description: OK
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/TaskWithID" 
  /tasks/{taskID}:
    get:
      tags:
        - Tasks
      summary: Returns a list of users.
      parameters:
        - name: taskID
          in: path
          required: true
          description: taskID
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/TaskWithID"
        "404":
          description: Task ID not found
        "401":
          description: 
    put:
      tags:
        - Tasks
      summary: Update existing task.
      parameters:
        - name: taskID
          in: path
          required: true
          description: taskID
          schema:
            type: integer
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/TaskWithID"  
      responses:
        "200":
          description: OK
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/TaskWithID"                    
    delete:
      tags:
        - Tasks
      summary: Update existing task.
      parameters:
        - name: taskID
          in: path
          required: true
          description: taskID
          schema:
            type: integer
      responses:
        "200":
          description: OK
  /labelcolors:
    get:
      tags:
        - Colors
      summary: Returns a list of colors.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: string
                example: ["#ff0000","#00ff00","#0000ff"]
  